name: Deployment

on:
  release:
    types: [ published ]


jobs:
  security_hardening:
    name: Check security hardening
    runs-on: ubuntu-latest
    steps:
    - name: Clone the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - name: Ensure SHA pinned actions
      uses: zgosalvez/github-actions-ensure-sha-pinned-actions@4830be28ce81da52ec70d65c552a7403821d98d4

  verify_clean_release:
    name: Verify a clean release
    needs: security_hardening
    runs-on: ubuntu-latest
    steps:
    - name: The release should not have any existing assets
      if: join(github.event.release.assets, '') != ''
      run: |
        echo "::error::The "${{ github.event.release.name }}" release has preexisting assets. This workflow will not be able to upload build files as release assets."
        exit 1

  testing:
    name: Run ${{ matrix.category }} testing
    needs: verify_clean_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        category: [static, unit, widget]
      fail-fast: false
    steps:
    - name: Clone the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        path: code
    - name: Get Flutter version
      id: get-flutter-version
      uses: zgosalvez/github-actions-get-flutter-version-env@22ab458dabc3aa2dce4dd9f1632a6800869d00de
      with:
        pubspec-file-path: code/pubspec.yaml
    - name: Cache Flutter
      id: flutter-cache
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
      with:
        path: flutter
        key: ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-${{ hashFiles('code/pubspec.lock') }}
        restore-keys: |
          ${{ env.cache-name }}-ubuntu-latest-${{ steps.get-flutter-version.outputs.version }}-
          ${{ env.cache-name }}-ubuntu-latest-
          ${{ env.cache-name }}-
      env:
        cache-name: flutter-cache
    - name: Clone the Flutter repository
      if: steps.flutter-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        repository: flutter/flutter
        ref: ${{ steps.get-flutter-version.outputs.version }}
        path: flutter
    - name: Add the flutter tool to the path
      run: |
        echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
        echo "$GITHUB_WORKSPACE/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
    - name: Populate the Flutter tool's cache of binary artifacts
      if: steps.flutter-cache.outputs.cache-hit != 'true'
      run: |
        flutter config --no-analytics
        flutter precache
    - name: Get Flutter packages
      run: flutter pub get
      working-directory: code

    # static testing
    - name: Analyze Flutter
      if: matrix.category == 'static'
      uses: zgosalvez/github-actions-analyze-dart@92375956021937d35938504eefb62b18bfebb154
      with:
        fail-on-warnings: true
        working-directory: code
    
    # unit testing
    - name: Run Flutter ${{ matrix.category }} tests
      if: matrix.category != 'static'
      run: flutter test --no-pub test/${{ matrix.category }}s
      working-directory: code

  build:
    name: Build the ${{ matrix.file }} file
    needs: testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            file: apk
            asset-content-type: application/java-archive
          - os: ubuntu-latest
            file: aab
            asset-content-type: application/zip
          - os: macos-latest
            file: ipa
            asset-content-type: application/octet-stream
      fail-fast: false
    env:
      FLUTTER_DEBUG_INFO_PATH: build/app/outputs/symbols
    steps:
    - name: Check matrix
      if: ${{ !(matrix.file == 'apk' && github.event.release.prerelease) || ((matrix.file == 'aab' || matrix.file == 'ipa') && !github.event.release.prerelease) }}
      run: exit
    - name: Clone the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        path: code
    - name: Get Flutter version
      id: get-flutter-version
      uses: zgosalvez/github-actions-get-flutter-version-env@22ab458dabc3aa2dce4dd9f1632a6800869d00de
      with:
        pubspec-file-path: code/pubspec.yaml
    - name: Cache Flutter
      id: flutter-cache
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
      with:
        path: flutter
        key: ${{ env.cache-name }}-${{ matrix.os }}-${{ steps.get-flutter-version.outputs.version }}-${{ hashFiles('code/pubspec.lock') }}
        restore-keys: |
          ${{ env.cache-name }}-${{ matrix.os }}-${{ steps.get-flutter-version.outputs.version }}-
          ${{ env.cache-name }}-${{ matrix.os }}-
          ${{ env.cache-name }}-
      env:
        cache-name: flutter-cache
    - name: Clone the Flutter repository
      if: steps.flutter-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        repository: flutter/flutter
        ref: ${{ steps.get-flutter-version.outputs.version }}
        path: flutter
    - name: Add the flutter tool to the path
      run: |
        echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
        echo "$GITHUB_WORKSPACE/flutter/bin/cache/dart-sdk/bin" >> $GITHUB_PATH
    - name: Populate the Flutter tool's cache of binary artifacts
      if: steps.flutter-cache.outputs.cache-hit != 'true'
      run: |
        flutter config --no-analytics
        flutter precache
    - name: Get Flutter packages
      run: flutter pub get
      working-directory: code

    # all
    - name: Parse the release tag
      id: parse-release-tag
      run: | # remove the leading "v"
        VERSION=${{ github.event.release.tag_name }}
        echo "::set-output name=version::${VERSION#v}"
      working-directory: code
    - name: Set the app version
      uses: microsoft/variable-substitution@6287962da9e5b6e68778dc51e840caa03ca84495
      with:
        files: 'code/pubspec.yaml'
      env:
        version: ${{ steps.parse-release-tag.outputs.version }}

    # apk
    - name: Build an Android APK file
      if: matrix.file == 'apk'
      run: |
        flutter build apk --obfuscate --split-debug-info=$FLUTTER_DEBUG_INFO_PATH
        mv build/app/outputs/flutter-apk/app-release.apk ../app.apk
        mv build/app/outputs/mapping/release/mapping.txt ../apk-mapping.txt
      working-directory: code
    
    # aab
    - name: Build an Android App Bundle file
      if: matrix.file == 'aab'
      run: |
        flutter build appbundle --obfuscate --split-debug-info=$FLUTTER_DEBUG_INFO_PATH
        mv build/app/outputs/bundle/release/app-release.aab ../app.aab
        mv build/app/outputs/mapping/release/mapping.txt ../aab-mapping.txt
      working-directory: code

    # apk/aab
    - name: Upload the artifacts — ${{ matrix.file }}-mapping.txt file
      if: matrix.file == 'apk' || matrix.file == 'aab'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: ${{ matrix.file }}-mapping.txt
        path: ${{ matrix.file }}-mapping.txt
    - name: Upload the release assets — ${{ matrix.file }}-mapping.txt file
      if: matrix.file == 'apk' || matrix.file == 'aab'
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ matrix.file }}-mapping.txt
        asset_name: ${{ matrix.file }}-mapping.txt
        asset_content_type: text/plain
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # ipa
    - name: Build an iOS App Store Package file
      if: matrix.file == 'ipa'
      run: |
        flutter build ios --no-codesign --obfuscate --split-debug-info=$FLUTTER_DEBUG_INFO_PATH
        echo "::warning::TODO: fastlane export_ipa"
        echo "TODO: mv code/build/app/outputs/ipa/app.ipa ../app.ipa"
      working-directory: code

    # all
    - name: Archive Flutter ${{ matrix.file }} symbols
      run: zip --recurse-paths ${{ github.workspace }}/code/flutter-${{ matrix.file }}-symbols.zip .
      working-directory: code/${{ env.FLUTTER_DEBUG_INFO_PATH }}
    - name: Upload the artifacts — flutter-${{ matrix.file }}-symbols.zip file
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: flutter-${{ matrix.file }}-symbols.zip
        path: code/flutter-${{ matrix.file }}-symbols.zip
    - name: Upload the release assets — flutter-${{ matrix.file }}-symbols.zip file
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: code/flutter-${{ matrix.file }}-symbols.zip
        asset_name: flutter-${{ matrix.file }}-symbols.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload the artifacts — ${{ matrix.file }} file
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
      with:
        name: app.${{ matrix.file }}
        path: app.${{ matrix.file }}
        if-no-files-found: error
    - name: Upload the release assets — ${{ matrix.file }} file
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: app.${{ matrix.file }}
        asset_name: app.${{ matrix.file }}
        asset_content_type: ${{ matrix.asset-content-type }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
